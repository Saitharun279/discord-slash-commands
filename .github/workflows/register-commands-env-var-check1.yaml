name: Register and deploy Slash Commands
on:
  push:
    branches: test-main
jobs:
  Environment-Variables-Check:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v2
      # - run: bash environment-variables-validator.sh
      # - name: Read environment variable names from file
        # id: read_file
      - run: bash get-env.sh
        #   secret_value=$(eval echo "\${{ secrets.$var_name }}")
        #   if [ -z "$secret_value" ]; then
        #     echo "Warning: Secret $var_name is not set or is empty."
        #   else
        #     echo "Injecting secret for $var_name"
        #     echo "$var_name=$secret_value" >> $GITHUB_ENV
        #   fi
        # done
        # echo "The value of MY_SECRET1 is: $DISCORD_APPLICATION_ID"
        # echo "The value of MY_SECRET2 is: $DISCORD_GUILD_ID"
        # echo "The value of MY_SECRET3 is: $DISCORD_TOKEN"
        # env:
        #   DISCORD_APPLICATION_ID: ${{secrets.DISCORD_APPLICATION_ID}}
        #   DISCORD_GUILD_ID: ${{secrets.DISCORD_GUILD_ID}}
        #   DISCORD_TOKEN: ${{secrets.DISCORD_TOKEN}}
        #   DISCORD_PUBLIC_KEY: ${{secrets.DISCORD_PUBLIC_KEY}}
        #   CLOUDFLARE_API_TOKEN: ${{secrets.CLOUDFLARE_API_TOKEN}}
        #   CLOUDFLARE_ACCOUNT_ID: ${{secrets.CLOUDFLARE_ACCOUNT_ID}}
        #   BOT_PRIVATE_KEY: ${{secrets.BOT_PRIVATE_KEY}}
        #   RDS_SERVERLESS_PUBLIC_KEY: ${{secrets.RDS_SERVERLESS_PUBLIC_KEY}}
        #   CRON_JOBS_PUBLIC_KEY: ${{secrets.CRON_JOBS_PUBLIC_KEY}}
        #   IDENTITY_SERVICE_PUBLIC_KEY: ${{secrets.IDENTITY_SERVICE_PUBLIC_KEY}}
  Register-Commands:
    needs: [Environment-Variables-Check]
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 18.18.2
      - run: npm install
      - run: npm run register
        env:
          DISCORD_TOKEN: ${{secrets.DISCORD_TOKEN}}
          DISCORD_APPLICATION_ID: ${{secrets.DISCORD_APPLICATION_ID}}
          DISCORD_GUILD_ID: ${{secrets.DISCORD_GUILD_ID}}
  Deploy-to-Cloudflare:
    needs: [Register-Commands]
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v2
      - run: npm install
      - uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{secrets.CLOUDFLARE_API_TOKEN}}
          accountId: ${{secrets.CLOUDFLARE_ACCOUNT_ID}}
          secrets: |
            DISCORD_PUBLIC_KEY
            DISCORD_TOKEN
            DISCORD_GUILD_ID
            CURRENT_ENVIRONMENT
            BOT_PRIVATE_KEY
            RDS_SERVERLESS_PUBLIC_KEY
            CRON_JOBS_PUBLIC_KEY
            IDENTITY_SERVICE_PUBLIC_KEY
        env:
          CURRENT_ENVIRONMENT: staging
          CLOUDFLARE_API_TOKEN: ${{secrets.CLOUDFLARE_API_TOKEN}}
          DISCORD_PUBLIC_KEY: ${{secrets.DISCORD_PUBLIC_KEY}}
          DISCORD_TOKEN: ${{secrets.DISCORD_TOKEN}}
          BOT_PRIVATE_KEY: ${{secrets.BOT_PRIVATE_KEY}}
          DISCORD_GUILD_ID: ${{secrets.DISCORD_GUILD_ID}}
          RDS_SERVERLESS_PUBLIC_KEY: ${{secrets.RDS_SERVERLESS_PUBLIC_KEY}}
          CRON_JOBS_PUBLIC_KEY: ${{secrets.CRON_JOBS_PUBLIC_KEY}}
          IDENTITY_SERVICE_PUBLIC_KEY: ${{secrets.IDENTITY_SERVICE_PUBLIC_KEY}}